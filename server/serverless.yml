service: webistics-server

custom:
    tableName: 'analytics-table-${self:provider.stage}'
    # myDomain: ${env.MY_DOMAIN}
    # myDomain: 'https://williambuck.dev'
    myDomain: '*'
    dynamodb:
        stages:
            - dev
        region: us-west-1
        start:
            migrate: true
            seed: true
    seed:
        domain:
            sources:
                - table: 'usersTable'
                  sources: [./src/seed.json]

provider:
    name: aws
    runtime: nodejs8.10
    stage: dev
    memorySize: 512
    region: us-west-1
    environment:
        DYNAMODB_TABLE: ${self:custom.tableName}
        MY_DOMAIN: ${self:custom.myDomain}
    iamRoleStatements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
    analyticsFunc:
        handler: dist/index.handler
        events:
            - http:
                path: /analytics
                method: post
                cors:
                    origin: '*'
            - http:
                path: /analytics
                method: get
                cors:
                    origin: '*'
                    # origin: ${self:custom.myDomain}

resources:
    Resources:
        AnalyticsDynamoDbTable:
            Type: 'AWS::DynamoDB::Table'
            DeletionPolicy: Retain
            Properties:
                AttributeDefinitions:
                    -
                        AttributeName: id
                        AttributeType: S
                KeySchema:
                    -
                        AttributeName: id
                        KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
                TableName: ${self:provider.environment.DYNAMODB_TABLE}
        usersTable:
            Type: 'AWS::DynamoDB::Table'
            Properties:
                TableName: usersTable
                AttributeDefinitions:
                    - AttributeName: username
                      AttributeType: S
                KeySchema:
                    - AttributeName: username
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1

plugins:
    - serverless-offline
    - serverless-dynamodb-local
